########################################################################

======
Helium
======

Welcome!  Helium aims to be an open source game engine toolkit to
help provide foundation technology and GUI tools for building game
engines (not games per se).

This project was seeded with code from Nocturnal Initiative, an open
source project at Insomniac Games.  Its continued development is
generously funded by Whitemoon Dreams, Inc.

http://nocturnal.insomniacgames.com/
http://www.insomniacgames.com/
http://www.insomniacgames.com/research_dev/
http://whitemoondreams.com/

========
Download
========

Source archive of head revision:
http://github.com/HeliumProject/Helium/zipball/master

Git URL (read only):
git://github.com/HeliumProject/Helium.git

=============
Prerequisites
=============

Visual Studio 2010
 - Visual Studio 2008 + SP1 may work but is untested (SP1 is required for 
   regex and compiler fixes)
DirectX SDK (installed to default location)
Python 3
FBX SDK (http://usa.autodesk.com/adsk/servlet/index?siteID=123112&id=7478532)
 - Download the DLL version, install it, and copy the contents to
   [helium root]/Integrations/FBX

===============
Building Helium
===============

First, generate project files by using premake4. premake4 is included
prebuilt for win32 platforms, in [helium root]/Utilities/Win32. See
premake documentation for more details. Project files generated by
premake will be placed in the [helium root]/Premake folder.
http://industriousone.com/premake-quick-start

Next, you'll need to build Dependencies.sln, which should build all
the libraries Helium depends upon.  You must build Dependencies.sln
using the same Project Configuration and Platform as you plan to use
for Helium.  (Eg: Debug / Win32, Release Unicode / x64)

Once you've build Dependencies.sln, you should be able to build
Helium.sln.  Again, make sure your Project Configuration and Platform
setting match up.

===============
Unicode Support
===============

Unicode is built via solution and project configurations (Debug Unicode
and Release Unicode).  wxWidgets is signalled to compile and link via
wxUSE_UNICODE which is specified in the Unicode.vsprops file.  This
vsprops file is inherited only in Unicode project configurations.

====================
Platform Agnosticism
====================

We are moving toward a platform-agnostic toolkit from windows-only.  For
the time being we are moving all platform-specific API calls into
Platform.vcproj.

-Geoff (AKA gorlak)
-Andy (AKA andyburke)
-Paul (AKA pacman) 
########################################################################
